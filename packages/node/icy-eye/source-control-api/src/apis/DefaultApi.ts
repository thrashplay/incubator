/* tslint:disable */
/* eslint-disable */
/**
 * Source Control Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResult &amp; object,
    ErrorResult &amp; objectFromJSON,
    ErrorResult &amp; objectToJSON,
    InlineResponse200,
    InlineResponse200FromJSON,
    InlineResponse200ToJSON,
} from '../models';

export interface GetRepositoriesRequest {
    body?: object;
}

/**
 * DefaultApi - interface
 * 
 * @export
 * @interface DefaultApiInterface
 */
export interface DefaultApiInterface {
    /**
     * 
     * @summary Retrieves a list of all source code repositories known to the system.
     * @param {object} [body] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApiInterface
     */
    getRepositoriesRaw(requestParameters: GetRepositoriesRequest): Promise<runtime.ApiResponse<InlineResponse200>>;

    /**
     * Retrieves a list of all source code repositories known to the system.
     */
    getRepositories(requestParameters: GetRepositoriesRequest): Promise<InlineResponse200>;

}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI implements DefaultApiInterface {

    /**
     * Retrieves a list of all source code repositories known to the system.
     */
    async getRepositoriesRaw(requestParameters: GetRepositoriesRequest): Promise<runtime.ApiResponse<InlineResponse200>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/repositories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse200FromJSON(jsonValue));
    }

    /**
     * Retrieves a list of all source code repositories known to the system.
     */
    async getRepositories(requestParameters: GetRepositoriesRequest): Promise<InlineResponse200> {
        const response = await this.getRepositoriesRaw(requestParameters);
        return await response.value();
    }

}
