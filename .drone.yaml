kind: pipeline
type: docker
name: build-arm-images

platform:
  arch: arm
  os: linux

steps:
  - name: build-git-client`
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/git-client
      dockerfile: packages/docker/git-client/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/git-client
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ .drone.yaml, packages/docker/git-client/** ]

  - name: generate-versions
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/generate-versions
      dockerfile: packages/docker/generate-versions/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/generate-versions
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ .drone.yaml, packages/docker/generate-versions/** ]

  - name: build-ddns-sidecar
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/nginx-proxy/ddns-sidecar
      dockerfile: packages/docker/nginx-proxy/ddns-sidecar/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/ddns-sidecar
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ .drone.yaml, packages/docker/nginx-proxy/ddns-sidecar/** ]

  - name: build-nginx-proxy
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/nginx-proxy/nginx-proxy
      dockerfile: packages/docker/nginx-proxy/nginx-proxy/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/nginx-proxy
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ .drone.yaml, packages/docker/nginx-proxy/nginx-proxy/** ]

  - name: build-homeassistant
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/homeassistant
      dockerfile: packages/docker/homeassistant/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/homeassistant
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ .drone.yaml, packages/docker/homeassistant/** ]

trigger:
  changeset:
    includes: [ .drone.yaml, packages/docker/** ]
  branch:
    - master

---

kind: pipeline
type: docker
name: build-npm-packages

steps:
  - name: initialize
    image: alpine/git
    commands:
      - git config --local user.email drone@thrashplay.com
      - git config --local user.name Drone

  - name: bootstrap
    image: node:lts
    commands:
      - yarn install --frozen-lockfile --non-interactive
      - yarn lerna bootstrap

  - name: build
    image: node:lts
    commands:
      - yarn build

  - name: test
    image: node:lts
    commands:
      - yarn test

  - name: bump-versions
    image: node:lts
    commands:
      - yarn lerna version --conventional-prerelease --preid next --no-changelog --yes
    when:
      branch:
        - master

  - name: authenticate-to-npm
    image: robertstettner/drone-npm-auth
    settings:
      token:
        from_secret: NPM_PUBLISH_TOKEN
    when:
      branch:
        - master

  - name: publish
    image: node:lts
    commands:
      - yarn lerna publish from-package --no-git-reset --dist-tag next --yes
    when:
      branch:
        - master

trigger:
  changeset:
    includes:
      - '.ci/**'
      - '.drone.yaml'
      - '.eslintignore'
      - '.eslintrc.js'
      - '@types/**'
      - 'babel.config.js'
      - 'build-lib/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'patches/**'
      - 'packages/node/**'
      - 'tsconfig.*.json'
      - 'tsconfig.json'
      - 'yarn.lock'

---

kind: pipeline
type: docker
name: deploy-services

depends_on:
  - build-arm-images
  - build-npm-packages

platform:
  arch: arm
  os: linux

steps:
  - name: generate-versions
    image: thrashplay/generate-versions
    settings:
      stack_files:
        - packages/pegasus-ops/dashboard/docker-compose.yaml
        - packages/pegasus-ops/hello-world/docker-compose.yaml
        - packages/pegasus-ops/nginx-proxy/docker-compose.yaml
        - packages/pegasus-ops/samba/docker-compose.yaml

  - name: deploy
    image: thrashplay/swarm-management
    settings:
      configuration_file: pegasus-ops/swarm.production.yaml
      docker_host: control.pegasus:2376
      docker_cacert:
        from_secret: DOCKER_CACERT
      docker_cert:
        from_secret: DOCKER_CERT
      docker_key:
        from_secret: DOCKER_KEY
      use_tls: true

trigger:
  branch:
    - master
