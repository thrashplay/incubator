/* tslint:disable */
/* eslint-disable */
/**
 * Source Control Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    GitRepository,
    GitRepositoryFromJSONTyped,
    GitRepositoryToJSON,
} from './';

/**
 * @type SourceCodeRepository
 * 
 * @export
 */
export type SourceCodeRepository = { repositoryType: 'git' } & GitRepository;

export function SourceCodeRepositoryFromJSON(json: any): SourceCodeRepository {
    return SourceCodeRepositoryFromJSONTyped(json, false);
}

export function SourceCodeRepositoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceCodeRepository {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['repositoryType']) {
        case 'git':
            return {...GitRepositoryFromJSONTyped(json, true), repositoryType: 'git'};
        default:
            throw new Error(`No variant of SourceCodeRepository exists with 'repositoryType=${json['repositoryType']}'`);
    }
}

export function SourceCodeRepositoryToJSON(value?: SourceCodeRepository | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['repositoryType']) {
        case 'git':
            return GitRepositoryToJSON(value);
        default:
            throw new Error(`No variant of SourceCodeRepository exists with 'repositoryType=${value['repositoryType']}'`);
    }
}

