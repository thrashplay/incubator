kind: pipeline
type: kubernetes
name: build-drone-plugins

platform:
  arch: arm
  os: linux

steps:
  - name: docker-edit
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      cache_from:
        - "thrashplay/docker-edit:master"
        - "thrashplay/docker-edit:${DRONE_BRANCH}"
      context: packages/drone-plugins/docker-edit
      dockerfile: packages/drone-plugins/docker-edit/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/docker-edit
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/drone-plugins/docker-edit/** ]

  - name: generate-versions
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/drone-plugins/generate-versions
      dockerfile: packages/drone-plugins/generate-versions/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/generate-versions
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/drone-plugins/generate-versions/** ]

  - name: swarm-management
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/drone-plugins/swarm-management
      dockerfile: packages/drone-plugins/swarm-management/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/swarm-management
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/drone-plugins/swarm-management/** ]

  - name: wait-for-service
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/drone-plugins/wait-for-service
      dockerfile: packages/drone-plugins/wait-for-service/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/wait-for-service
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/drone-plugins/wait-for-service/** ]

trigger:
  changeset:
    includes: [ packages/drone-plugins/** ]
  branch:
    - master

---

kind: pipeline
type: kubernetes
name: build-arm-images

depends_on:
  - build-drone-plugins

platform:
  arch: arm
  os: linux

services:
  - name: docker
    image: docker:19.03.8-dind
    environment:
      DOCKER_TLS_CERTDIR: /certs
    privileged: true
    volumes:
      - name: docker-certs
        path: /certs

steps:
  - name: wait-for-docker
    image: thrashplay/wait-for-service
    depends_on: [ clone ]
    settings:
      host: docker
      port: 2376
      retry_limit: 90

  - name: backup-agent_rclone
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/backup-agent/rclone
      dockerfile: packages/docker/backup-agent/rclone/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/rclone
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/backup-agent/** ]

  - name: backup-agent_rclone-service
    image: plugins/docker
    depends_on: [ clone, backup-agent_rclone ]
    settings:
      context: packages/docker/backup-agent/rclone-service
      dockerfile: packages/docker/backup-agent/rclone-service/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/rclone-service
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/backup-agent/** ]

  - name: backup-agent
    image: plugins/docker
    depends_on: [ clone, backup-agent_rclone ]
    settings:
      context: packages/docker/backup-agent/backup-agent
      dockerfile: packages/docker/backup-agent/backup-agent/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/backup-agent
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/backup-agent/** ]

  - name: ddns-sidecar
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/ddns-sidecar
      dockerfile: packages/docker/ddns-sidecar/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/ddns-sidecar
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/ddns-sidecar/** ]

  - name: git-client
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/git-client
      dockerfile: packages/docker/git-client/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/git-client
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/git-client/** ]

  - name: guide-on-the-side
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/guide-on-the-side
      dockerfile: packages/docker/guide-on-the-side/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/guide-on-the-side
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/guide-on-the-side/** ]

  - name: homeassistant
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/homeassistant
      dockerfile: packages/docker/homeassistant/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/homeassistant
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/homeassistant/** ]

  - name: samba
    image: thrashplay/docker-edit
    depends_on: [ wait-for-docker ]
    environment:
      DOCKER_CERT_PATH: /certs/client
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_VERIFY: true
    settings:
      edit_command: set arch "arm"
      password:
        from_secret: DOCKER_PASSWORD
      source_image: "dperson/samba:armhf"
      # tags:
      #   - latest
      #   - ${DRONE_BRANCH}
      #   - ${DRONE_BRANCH}-${DRONE_COMMIT}
      target_image: "thrashplay/samba-armhf:latest"
      username: thrashplay
    volumes:
      - name: docker-certs
        path: /certs
    when:
      changeset:
        includes: [ packages/drone-plugins/docker-edit/** ]

  - name: service-wrapper
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/service-wrapper
      dockerfile: packages/docker/service-wrapper/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/service-wrapper
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/service-wrapper/** ]

  - name: sound-test
    image: plugins/docker
    depends_on: [ clone ]
    settings:
      context: packages/docker/sound-test
      dockerfile: packages/docker/sound-test/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/sound-test
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/sound-test/** ]

trigger:
  changeset:
    includes: [ packages/docker/** ]
  branch:
    - master

volumes:
  - name: docker-certs
    temp: {}

---

kind: pipeline
type: kubernetes
name: build-amd64-images

depends_on:
  - build-drone-plugins

platform:
  arch: amd64
  os: linux

steps:
  - name: react-native-android
    image: plugins/docker
    settings:
      context: packages/docker/react-native-android
      dockerfile: packages/docker/react-native-android/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/react-native-android
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/react-native-android/** ]

  - name: cloudflare-dns
    image: plugins/docker
    settings:
      context: packages/docker/dns-updater/cloudflare-dns
      dockerfile: packages/docker/dns-updater/cloudflare-dns/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/cloudflare-dns
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/dns-updater/cloudflare-dns/** ]

  - name: clusterip-dns-updater
    image: plugins/docker
    settings:
      context: packages/docker/dns-updater/clusterip-dns-updater
      dockerfile: packages/docker/dns-updater/clusterip-dns-updater/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/clusterip-dns-updater
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/dns-updater/clusterip-dns-updater/** ]

  - name: firebase
    image: plugins/docker
    settings:
      context: packages/docker/firebase
      dockerfile: packages/docker/firebase/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/firebase
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/firebase/** ]

  - name: firebase-emulator
    image: plugins/docker
    settings:
      context: packages/docker/firebase-emulator
      dockerfile: packages/docker/firebase-emulator/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/firebase-emulator
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/firebase-emulator/** ]

  - name: kubectl-shell
    image: plugins/docker
    settings:
      context: packages/docker/kubectl-shell
      dockerfile: packages/docker/kubectl-shell/Dockerfile
      force_tag: true
      password:
        from_secret: DOCKER_PASSWORD
      repo: thrashplay/kubectl-shell
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_BRANCH}-${DRONE_COMMIT}
      username: thrashplay
    when:
      changeset:
        includes: [ packages/docker/kubectl-shell/** ]

trigger:
  changeset:
    includes: [ packages/docker/** ]
  branch:
    - master

---

kind: pipeline
type: kubernetes
name: build-npm-packages

metadata:
  namespace: drone

steps:
  - name: initialize
    image: alpine/git
    commands:
      - git config --local user.email drone@thrashplay.com
      - git config --local user.name Drone

  - name: bootstrap
    image: node:lts
    commands:
      - yarn install --frozen-lockfile --non-interactive
      - yarn lerna bootstrap

  - name: build
    image: node:lts
    commands:
      - yarn build

  - name: test
    image: node:lts
    commands:
      - yarn test

  - name: bump-versions
    image: node:lts
    commands:
      - yarn lerna version --conventional-prerelease --preid next --no-changelog --yes
    when:
      branch:
        - master

  - name: authenticate-to-npm
    image: robertstettner/drone-npm-auth
    settings:
      token:
        from_secret: NPM_PUBLISH_TOKEN
    when:
      branch:
        - master

  - name: publish
    image: node:lts
    commands:
      - yarn lerna publish from-package --no-git-reset --dist-tag next --yes
    when:
      branch:
        - master

trigger:
  changeset:
    includes:
      - '.ci/**'
      - '.eslintignore'
      - '.eslintrc.js'
      - '@types/**'
      - 'babel.config.js'
      - 'build-lib/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'patches/**'
      - 'packages/node/**'
      - 'tsconfig.*.json'
      - 'tsconfig.json'
      - 'yarn.lock'

---

kind: pipeline
type: kubernetes
name: deploy-services

depends_on:
  - build-arm-images
  - build-npm-packages

platform:
  arch: arm
  os: linux

steps:
  - name: generate-versions
    image: thrashplay/generate-versions
    settings:
      stack_files:
        - packages/pegasus-ops/backup-agent/docker-compose.yaml
        - packages/pegasus-ops/dashboard/docker-compose.yaml
        - packages/pegasus-ops/guide-on-the-side/docker-compose.yaml
        - packages/pegasus-ops/samba/docker-compose.yaml
        - packages/pegasus-ops/traefik/docker-compose.yaml

  - name: deploy
    image: thrashplay/swarm-management
    settings:
      configuration_file: packages/pegasus-ops/swarm.production.yaml
      docker_host: control.pegasus:2376
      docker_cacert:
        from_secret: DOCKER_CACERT
      docker_cert:
        from_secret: DOCKER_CERT
      docker_key:
        from_secret: DOCKER_KEY
      use_tls: true

trigger:
  branch:
    - master
