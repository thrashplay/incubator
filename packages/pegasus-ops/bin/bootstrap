#!/usr/bin/env sh

SCRIPT=$(readlink -f "$0")
DIR=$(dirname "$SCRIPT")
HOST=$(cat /etc/hostname)

if [ -z $1 ]; then
  echo "Usage: bootstrap <manager-ip> <secrets-path>" 
  exit 1
fi
if [ -z $2 ]; then
  echo "Usage: bootstrap <manager-ip> <secrets-path>" 
  exit 1
fi

deploy_stack () {
  docker stack deploy --compose-file "$DIR/../bootstrap/$1/docker-compose.yaml" $1
}

set -e
set -x

${DIR}/bootstrap-dist/load-netshare

docker swarm init --advertise-addr $1
docker node update --label-add public $HOST

docker network create -d overlay --attachable webgateway

# first worker node: 192.168.1.8 - 192.168.1.15
docker network create --config-only --subnet=192.168.1.0/24 --gateway=192.168.1.1 -o parent=eth0 \
  --ip-range=192.168.1.8/29 macvlan-config
# second worker node: 192.168.1.16 - 192.168.1.23
# docker network create --config-only --subnet=192.168.1.0/24 --gateway=192.168.1.1 -o parent=eth0 \
#   --ip-range=192.168.1.16/29 macvlan-config
# third worker node: 192.168.1.24 - 192.168.1.31
# docker network create --config-only --subnet=192.168.1.0/24 --gateway=192.168.1.1 -o parent=eth0 \
#   --ip-range=192.168.1.24/29 macvlan-config
# ... and so on

docker network create -d macvlan --scope swarm --config-from macvlan-config device-discovery


$DIR/load-secrets $2

docker run -d --name nfs \
  --privileged \
  --restart unless-stopped \
  -v /srv/nfs:/nfs.01 \
  -e SHARED_DIRECTORY=/nfs.01 \
  -e SYNC=true \
  --net=host \
  itsthenetwork/nfs-server-alpine:11-arm

deploy_stack drone